#loc = loc("/root/triton-runner/examples/python_runner/matmul-with-tma-v4.py":15:0)
module {
  tt.func public @matmul_kernel_make_tensor_desciptor(%arg0: !tt.ptr<f8E5M2> {tt.divisibility = 16 : i32} loc("/root/triton-runner/examples/python_runner/matmul-with-tma-v4.py":15:0), %arg1: !tt.ptr<f8E5M2> {tt.divisibility = 16 : i32} loc("/root/triton-runner/examples/python_runner/matmul-with-tma-v4.py":15:0), %arg2: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/root/triton-runner/examples/python_runner/matmul-with-tma-v4.py":15:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("/root/triton-runner/examples/python_runner/matmul-with-tma-v4.py":15:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("/root/triton-runner/examples/python_runner/matmul-with-tma-v4.py":15:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/root/triton-runner/examples/python_runner/matmul-with-tma-v4.py":15:0)) attributes {noinline = false} {
    %c63_i32 = arith.constant 63 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<128x64xf32> loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c1_i64 = arith.constant 1 : i64 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.get_program_id y : i32 loc(#loc3)
    %2 = arith.extsi %arg4 : i32 to i64 loc(#loc4)
    %3 = tt.make_tensor_descriptor %arg0, [%arg3, %arg4], [%2, %c1_i64] : <f8E5M2>, <tensor<128x64xf8E5M2>> loc(#loc4)
    %4 = arith.extsi %arg5 : i32 to i64 loc(#loc5)
    %5 = tt.make_tensor_descriptor %arg1, [%arg4, %arg5], [%4, %c1_i64] : <f8E5M2>, <tensor<64x64xf8E5M2>> loc(#loc5)
    %6 = tt.make_tensor_descriptor %arg2, [%arg3, %arg5], [%4, %c1_i64] : <f16>, <tensor<128x64xf16>> loc(#loc6)
    %7 = arith.addi %arg4, %c63_i32 : i32 loc(#loc23)
    %8 = arith.divsi %7, %c64_i32 : i32 loc(#loc24)
    %9 = scf.for %arg6 = %c0_i32 to %8 step %c1_i32 iter_args(%arg7 = %cst) -> (tensor<128x64xf32>)  : i32 {
      %13 = arith.muli %0, %c128_i32 : i32 loc(#loc11)
      %14 = arith.muli %arg6, %c64_i32 : i32 loc(#loc12)
      %15 = tt.descriptor_load %3[%13, %14] : !tt.tensordesc<tensor<128x64xf8E5M2>> -> tensor<128x64xf8E5M2> loc(#loc13)
      %16 = arith.muli %1, %c64_i32 : i32 loc(#loc14)
      %17 = tt.descriptor_load %5[%14, %16] : !tt.tensordesc<tensor<64x64xf8E5M2>> -> tensor<64x64xf8E5M2> loc(#loc15)
      %18 = tt.dot %15, %17, %arg7, inputPrecision = tf32 {maxNumImpreciseAcc = 1073741824 : i32} : tensor<128x64xf8E5M2> * tensor<64x64xf8E5M2> -> tensor<128x64xf32> loc(#loc16)
      scf.yield %18 : tensor<128x64xf32> loc(#loc17)
    } loc(#loc10)
    %10 = arith.truncf %9 : tensor<128x64xf32> to tensor<128x64xf16> loc(#loc18)
    %11 = arith.muli %0, %c128_i32 : i32 loc(#loc19)
    %12 = arith.muli %1, %c64_i32 : i32 loc(#loc20)
    tt.descriptor_store %6[%11, %12], %10 : !tt.tensordesc<tensor<128x64xf16>>, tensor<128x64xf16> loc(#loc21)
    tt.return loc(#loc22)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/root/triton-runner/examples/python_runner/matmul-with-tma-v4.py":20:26)
#loc3 = loc("/root/triton-runner/examples/python_runner/matmul-with-tma-v4.py":21:26)
#loc4 = loc("/root/triton-runner/examples/python_runner/matmul-with-tma-v4.py":24:8)
#loc5 = loc("/root/triton-runner/examples/python_runner/matmul-with-tma-v4.py":30:8)
#loc6 = loc("/root/triton-runner/examples/python_runner/matmul-with-tma-v4.py":36:8)
#loc7 = loc("/root/miniconda3/lib/python3.12/site-packages/triton/language/standard.py":40:22)
#loc8 = loc("/root/triton-runner/examples/python_runner/matmul-with-tma-v4.py":43:30)
#loc9 = loc("/root/miniconda3/lib/python3.12/site-packages/triton/language/standard.py":40:28)
#loc10 = loc("/root/triton-runner/examples/python_runner/matmul-with-tma-v4.py":43:19)
#loc11 = loc("/root/triton-runner/examples/python_runner/matmul-with-tma-v4.py":44:33)
#loc12 = loc("/root/triton-runner/examples/python_runner/matmul-with-tma-v4.py":44:51)
#loc13 = loc("/root/triton-runner/examples/python_runner/matmul-with-tma-v4.py":44:24)
#loc14 = loc("/root/triton-runner/examples/python_runner/matmul-with-tma-v4.py":45:51)
#loc15 = loc("/root/triton-runner/examples/python_runner/matmul-with-tma-v4.py":45:24)
#loc16 = loc("/root/triton-runner/examples/python_runner/matmul-with-tma-v4.py":46:32)
#loc17 = loc("/root/triton-runner/examples/python_runner/matmul-with-tma-v4.py":46:8)
#loc18 = loc("/root/triton-runner/examples/python_runner/matmul-with-tma-v4.py":48:33)
#loc19 = loc("/root/triton-runner/examples/python_runner/matmul-with-tma-v4.py":49:26)
#loc20 = loc("/root/triton-runner/examples/python_runner/matmul-with-tma-v4.py":49:48)
#loc21 = loc("/root/triton-runner/examples/python_runner/matmul-with-tma-v4.py":49:63)
#loc22 = loc("/root/triton-runner/examples/python_runner/matmul-with-tma-v4.py":49:4)
#loc23 = loc(callsite(#loc7 at #loc8))
#loc24 = loc(callsite(#loc9 at #loc8))
