//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_75
.address_size 64

	// .globl	matmul_kernel           // -- Begin function matmul_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @matmul_kernel
.visible .entry matmul_kernel(
	.param .u64 .ptr .global .align 1 matmul_kernel_param_0,
	.param .u64 .ptr .global .align 1 matmul_kernel_param_1,
	.param .u64 .ptr .global .align 1 matmul_kernel_param_2,
	.param .u32 matmul_kernel_param_3,
	.param .u32 matmul_kernel_param_4,
	.param .u32 matmul_kernel_param_5,
	.param .u32 matmul_kernel_param_6,
	.param .u32 matmul_kernel_param_7,
	.param .u32 matmul_kernel_param_8,
	.param .u64 .ptr .global .align 1 matmul_kernel_param_9
)
.reqntid 128
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<65>;
	.reg .b64 	%rd<28>;
	.loc	1 13 0                          // matmul.py:13:0
$L__func_begin0:
	.loc	1 13 0                          // matmul.py:13:0

// %bb.0:
	ld.param.b32 	%r18, [matmul_kernel_param_8];
	ld.param.b32 	%r15, [matmul_kernel_param_5];
	ld.param.b32 	%r14, [matmul_kernel_param_4];
	ld.param.b32 	%r13, [matmul_kernel_param_3];
	ld.param.b64 	%rd12, [matmul_kernel_param_2];
$L__tmp0:
	.loc	1 21 26                         // matmul.py:21:26
	mov.u32 	%r20, %ctaid.x;
	.loc	1 22 26                         // matmul.py:22:26
	mov.u32 	%r21, %ctaid.y;
	.loc	1 24 21                         // matmul.py:24:21
	shl.b32 	%r1, %r21, 4;
	.loc	1 24 49                         // matmul.py:24:49
	mov.u32 	%r2, %tid.x;
	.loc	1 25 21                         // matmul.py:25:21
	shl.b32 	%r4, %r20, 4;
	.loc	1 34 19                         // matmul.py:34:19
	setp.lt.s32 	%p1, %r15, 1;
	mov.b32 	%r63, 0f00000000;
	mov.b32 	%r64, %r63;
	@%p1 bra 	$L__BB0_3;
// %bb.1:                               // %.lr.ph.preheader
	.loc	1 0 19                          // matmul.py:0:19
	ld.param.b32 	%r17, [matmul_kernel_param_7];
	ld.param.b32 	%r16, [matmul_kernel_param_6];
	ld.param.b64 	%rd11, [matmul_kernel_param_0];
	ld.param.b64 	%rd13, [matmul_kernel_param_1];
	bfe.u32 	%r3, %r2, 4, 3;
	and.b32 	%r22, %r2, 15;
	or.b32 	%r23, %r4, %r22;
	mul.wide.s32 	%rd14, %r23, 4;
	add.s64 	%rd1, %rd13, %rd14;
	.loc	1 34 19                         // matmul.py:34:19
	cvt.u64.u32 	%rd27, %r15;
	add.s32 	%r26, %r1, %r3;
	add.s32 	%r27, %r26, 8;
	mul.lo.s32 	%r28, %r16, %r27;
	mul.wide.s32 	%rd15, %r28, 4;
	add.s64 	%rd26, %rd11, %rd15;
	mul.lo.s32 	%r29, %r16, %r26;
	mul.wide.s32 	%rd16, %r29, 4;
	add.s64 	%rd25, %rd11, %rd16;
	mov.b32 	%r63, 0f00000000;
	mov.b32 	%r60, 0;
	mov.b32 	%r64, %r63;
$L__BB0_2:                              // %.lr.ph
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 36 31                         // matmul.py:36:31
	mul.wide.s32 	%rd20, %r60, 4;
	add.s64 	%rd19, %rd1, %rd20;
	.loc	1 38 20                         // matmul.py:38:20
	// begin inline asm
	mov.u32 %r30, 0x0;
	ld.global.b32 { %r30 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r31, 0x0;
	ld.global.b32 { %r31 }, [ %rd26 + 0 ];
	// end inline asm
	.loc	1 39 20                         // matmul.py:39:20
	// begin inline asm
	mov.u32 %r32, 0x0;
	ld.global.b32 { %r32 }, [ %rd19 + 0 ];
	// end inline asm
	.loc	1 40 23                         // matmul.py:40:23
	fma.rn.f32 	%r63, %r30, %r32, %r63;
	fma.rn.f32 	%r64, %r31, %r32, %r64;
	.loc	1 34 19                         // matmul.py:34:19
	add.s64 	%rd27, %rd27, -1;
	add.s32 	%r60, %r60, %r17;
	add.s64 	%rd26, %rd26, 4;
	add.s64 	%rd25, %rd25, 4;
	setp.ne.s64 	%p2, %rd27, 0;
	@%p2 bra 	$L__BB0_2;
$L__BB0_3:                              // %._crit_edge
	.loc	1 24 49                         // matmul.py:24:49
	shl.b32 	%r35, %r2, 1;
	and.b32 	%r36, %r35, 14;
	.loc	1 25 36                         // matmul.py:25:36
	or.b32 	%r37, %r36, %r4;
	.loc	1 24 49                         // matmul.py:24:49
	bfe.u32 	%r38, %r2, 3, 4;
	.loc	1 24 36                         // matmul.py:24:36
	or.b32 	%r39, %r38, %r1;
	.loc	1 43 39                         // matmul.py:43:39
	mul.lo.s32 	%r40, %r18, %r39;
	.loc	1 43 21                         // matmul.py:43:21
	mul.wide.s32 	%rd22, %r40, 4;
	add.s64 	%rd23, %rd12, %rd22;
	.loc	1 43 51                         // matmul.py:43:51
	mul.wide.s32 	%rd24, %r37, 4;
	add.s64 	%rd21, %rd23, %rd24;
	.loc	1 44 32                         // matmul.py:44:32
	setp.lt.s32 	%p4, %r39, %r13;
	.loc	1 44 56                         // matmul.py:44:56
	setp.lt.s32 	%p5, %r37, %r14;
	.loc	1 44 38                         // matmul.py:44:38
	and.pred 	%p3, %p4, %p5;
	.loc	1 45 21                         // matmul.py:45:21
	and.b32 	%r41, %r2, 127;
	and.b32 	%r42, %r35, 240;
	shr.u32 	%r43, %r2, 1;
	and.b32 	%r44, %r43, 56;
	mov.b32 	%r45, global_smem;
	add.s32 	%r46, %r45, %r44;
	shl.b32 	%r47, %r41, 2;
	add.s32 	%r48, %r46, %r47;
	st.shared.b32 	[%r48], %r63;
	or.b32 	%r49, %r41, 128;
	shr.u32 	%r50, %r49, 1;
	and.b32 	%r51, %r50, 120;
	add.s32 	%r52, %r45, %r51;
	add.s32 	%r53, %r52, %r47;
	st.shared.b32 	[%r53+512], %r64;
	bar.sync 	0;
	shr.u32 	%r54, %r42, 1;
	add.s32 	%r55, %r45, %r54;
	shl.b32 	%r56, %r42, 2;
	add.s32 	%r57, %r55, %r56;
	shl.b32 	%r58, %r36, 2;
	add.s32 	%r59, %r57, %r58;
	ld.shared.v2.b32 	{%r33, %r34}, [%r59];
	// begin inline asm
	@%p3 st.global.v2.b32 [ %rd21 + 0 ], { %r33, %r34 };
	// end inline asm
	.loc	1 45 4                          // matmul.py:45:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/ubuntu/triton_runner/examples/python_runner/matmul.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 81                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x4a DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 109                                 // DW_AT_name
.b8 97
.b8 116
.b8 109
.b8 117
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 117
.b8 98
.b8 117
.b8 110
.b8 116
.b8 117
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 117
.b8 110
.b8 110
.b8 101
.b8 114
.b8 47
.b8 101
.b8 120
.b8 97
.b8 109
.b8 112
.b8 108
.b8 101
.b8 115
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 95
.b8 114
.b8 117
.b8 110
.b8 110
.b8 101
.b8 114
.b8 0
	}
	.section	.debug_macinfo	{	}
