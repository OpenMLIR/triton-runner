; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-p7:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external local_unnamed_addr addrspace(3) global [0 x i8], align 16

define ptx_kernel void @matmul_kernel(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, ptr addrspace(1) readnone captures(none) %9) local_unnamed_addr #0 !dbg !5 {
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !8
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !dbg !9
  %13 = shl nuw nsw i32 %12, 4, !dbg !10
  %14 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %15 = lshr i32 %14, 4, !dbg !11
  %16 = and i32 %15, 7, !dbg !11
  %17 = and i32 %14, 15, !dbg !11
  %18 = or disjoint i32 %16, %13, !dbg !12
  %19 = or disjoint i32 %18, 8, !dbg !12
  %20 = shl i32 %11, 4, !dbg !13
  %21 = or disjoint i32 %20, %17, !dbg !14
  %22 = mul i32 %6, %18, !dbg !15
  %23 = mul i32 %6, %19, !dbg !15
  %24 = sext i32 %22 to i64, !dbg !16
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !16
  %26 = sext i32 %23 to i64, !dbg !16
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !16
  %28 = sext i32 %21 to i64, !dbg !17
  %29 = getelementptr float, ptr addrspace(1) %1, i64 %28, !dbg !17
  %30 = icmp sgt i32 %5, 0, !dbg !18
  br i1 %30, label %.lr.ph.preheader, label %._crit_edge, !dbg !18

.lr.ph.preheader:                                 ; preds = %10
  %wide.trip.count = zext nneg i32 %5 to i64, !dbg !18
  br label %.lr.ph, !dbg !18

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph.preheader ], [ %indvars.iv.next, %.lr.ph ]
  %31 = phi float [ 0.000000e+00, %.lr.ph.preheader ], [ %47, %.lr.ph ]
  %32 = phi float [ 0.000000e+00, %.lr.ph.preheader ], [ %48, %.lr.ph ]
  %33 = getelementptr float, ptr addrspace(1) %25, i64 %indvars.iv, !dbg !19
  %34 = getelementptr float, ptr addrspace(1) %27, i64 %indvars.iv, !dbg !19
  %35 = trunc nuw nsw i64 %indvars.iv to i32, !dbg !20
  %36 = mul i32 %7, %35, !dbg !20
  %37 = sext i32 %36 to i64, !dbg !21
  %38 = getelementptr float, ptr addrspace(1) %29, i64 %37, !dbg !21
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %33) #3, !dbg !22
  %40 = bitcast i32 %39 to float, !dbg !22
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %34) #3, !dbg !22
  %42 = bitcast i32 %41 to float, !dbg !22
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %38) #3, !dbg !23
  %44 = bitcast i32 %43 to float, !dbg !23
  %45 = fmul float %40, %44, !dbg !24
  %46 = fmul float %42, %44, !dbg !24
  %47 = fadd float %31, %45, !dbg !25
  %48 = fadd float %32, %46, !dbg !25
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !18
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !18
  br i1 %exitcond.not, label %._crit_edge, label %.lr.ph, !dbg !18

._crit_edge:                                      ; preds = %.lr.ph, %10
  %49 = phi float [ 0.000000e+00, %10 ], [ %47, %.lr.ph ], !dbg !26
  %50 = phi float [ 0.000000e+00, %10 ], [ %48, %.lr.ph ], !dbg !26
  %51 = shl nuw nsw i32 %14, 1, !dbg !11
  %52 = and i32 %51, 14, !dbg !11
  %53 = or disjoint i32 %52, %20, !dbg !14
  %54 = lshr i32 %14, 3, !dbg !11
  %55 = and i32 %54, 15, !dbg !11
  %56 = or disjoint i32 %55, %13, !dbg !12
  %57 = mul i32 %8, %56, !dbg !27
  %58 = sext i32 %57 to i64, !dbg !28
  %59 = getelementptr float, ptr addrspace(1) %2, i64 %58, !dbg !28
  %60 = sext i32 %53 to i64, !dbg !29
  %61 = getelementptr float, ptr addrspace(1) %59, i64 %60, !dbg !29
  %62 = icmp slt i32 %56, %3, !dbg !30
  %63 = icmp slt i32 %53, %4, !dbg !31
  %64 = and i1 %62, %63, !dbg !32
  %65 = and i32 %14, 127, !dbg !33
  %66 = and i32 %51, 240, !dbg !33
  %67 = and i32 %54, 14, !dbg !33
  %68 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %67, !dbg !33
  %69 = getelementptr inbounds nuw float, ptr addrspace(3) %68, i32 %65, !dbg !33
  store float %49, ptr addrspace(3) %69, align 4, !dbg !33
  %70 = or disjoint i32 %65, 128, !dbg !33
  %71 = lshr i32 %70, 3, !dbg !33
  %72 = and i32 %71, 30, !dbg !33
  %73 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %72, !dbg !33
  %74 = getelementptr inbounds nuw float, ptr addrspace(3) %73, i32 %70, !dbg !33
  store float %50, ptr addrspace(3) %74, align 4, !dbg !33
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !33
  %75 = lshr exact i32 %66, 1, !dbg !33
  %76 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %75, !dbg !33
  %77 = getelementptr inbounds nuw float, ptr addrspace(3) %76, i32 %66, !dbg !33
  %78 = getelementptr inbounds nuw float, ptr addrspace(3) %77, i32 %52, !dbg !33
  %.extract = load i32, ptr addrspace(3) %78, align 8, !dbg !33
  %79 = getelementptr inbounds nuw i8, ptr addrspace(3) %78, i32 4, !dbg !33
  %.extract5 = load i32, ptr addrspace(3) %79, align 4, !dbg !33
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract, i32 %.extract5, ptr addrspace(1) %61, i1 %64) #3, !dbg !33
  ret void, !dbg !34
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 2147483647) i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 65535) i32 @llvm.nvvm.read.ptx.sreg.ctaid.y() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 1024) i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier.cta.sync.aligned.all(i32) #2

attributes #0 = { "nvvm.reqntid"="128" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}
!llvm.ident = !{!4}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "matmul.py", directory: "/home/ubuntu/triton_runner/examples/python_runner")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!4 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!5 = distinct !DISubprogram(name: "matmul_kernel", linkageName: "matmul_kernel", scope: !1, file: !1, line: 13, type: !6, scopeLine: 13, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 21, column: 26, scope: !5)
!9 = !DILocation(line: 22, column: 26, scope: !5)
!10 = !DILocation(line: 24, column: 21, scope: !5)
!11 = !DILocation(line: 24, column: 49, scope: !5)
!12 = !DILocation(line: 24, column: 36, scope: !5)
!13 = !DILocation(line: 25, column: 21, scope: !5)
!14 = !DILocation(line: 25, column: 36, scope: !5)
!15 = !DILocation(line: 28, column: 39, scope: !5)
!16 = !DILocation(line: 28, column: 21, scope: !5)
!17 = !DILocation(line: 29, column: 21, scope: !5)
!18 = !DILocation(line: 34, column: 19, scope: !5)
!19 = !DILocation(line: 35, column: 31, scope: !5)
!20 = !DILocation(line: 36, column: 35, scope: !5)
!21 = !DILocation(line: 36, column: 31, scope: !5)
!22 = !DILocation(line: 38, column: 20, scope: !5)
!23 = !DILocation(line: 39, column: 20, scope: !5)
!24 = !DILocation(line: 40, column: 27, scope: !5)
!25 = !DILocation(line: 40, column: 23, scope: !5)
!26 = !DILocation(line: 31, column: 27, scope: !5)
!27 = !DILocation(line: 43, column: 39, scope: !5)
!28 = !DILocation(line: 43, column: 21, scope: !5)
!29 = !DILocation(line: 43, column: 51, scope: !5)
!30 = !DILocation(line: 44, column: 32, scope: !5)
!31 = !DILocation(line: 44, column: 56, scope: !5)
!32 = !DILocation(line: 44, column: 38, scope: !5)
!33 = !DILocation(line: 45, column: 21, scope: !5)
!34 = !DILocation(line: 45, column: 4, scope: !5)
