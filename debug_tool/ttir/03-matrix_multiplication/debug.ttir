#loc = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":10:0)
module {
  tt.func public @matrix_multiplication_kernel(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":10:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":10:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":10:0), %arg3: i32 loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":10:0), %arg4: i32 loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":10:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":10:0), %arg6: i32 loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":10:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":10:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":10:0), %debug_tensor: !tt.ptr<f32>) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<64x64xf32> loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.get_program_id y : i32 loc(#loc3)
    %2 = arith.muli %1, %c64_i32 : i32 loc(#loc4)
    %3 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc5)
    %4 = tt.splat %2 : i32 -> tensor<64xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<64xi32> loc(#loc6)
    %6 = arith.muli %0, %c64_i32 : i32 loc(#loc7)
    %7 = tt.splat %6 : i32 -> tensor<64xi32> loc(#loc8)
    %8 = arith.addi %7, %3 : tensor<64xi32> loc(#loc8)
    %9 = tt.expand_dims %5 {axis = 1 : i32} : tensor<64xi32> -> tensor<64x1xi32> loc(#loc9)
    %10 = tt.splat %arg6 : i32 -> tensor<64x1xi32> loc(#loc10)
    %11 = arith.muli %9, %10 : tensor<64x1xi32> loc(#loc10)
    %12 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<64x1x!tt.ptr<bf16>> loc(#loc11)
    %13 = tt.addptr %12, %11 : tensor<64x1x!tt.ptr<bf16>>, tensor<64x1xi32> loc(#loc11)
    %14 = tt.expand_dims %8 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc12)
    %15 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<1x64x!tt.ptr<bf16>> loc(#loc13)
    %16 = tt.addptr %15, %14 : tensor<1x64x!tt.ptr<bf16>>, tensor<1x64xi32> loc(#loc13)
    %17 = scf.for %arg9 = %c0_i32 to %arg4 step %c1_i32 iter_args(%arg10 = %cst) -> (tensor<64x64xf32>)  : i32 {
      %33 = tt.splat %arg9 : i32 -> tensor<64x1xi32> loc(#loc15)
      %34 = tt.addptr %13, %33 : tensor<64x1x!tt.ptr<bf16>>, tensor<64x1xi32> loc(#loc15)
      %35 = tt.load %34 : tensor<64x1x!tt.ptr<bf16>> loc(#loc16)
      %36 = arith.muli %arg7, %arg9 : i32 loc(#loc17)
      %37 = tt.splat %36 : i32 -> tensor<1x64xi32> loc(#loc18)
      %38 = tt.addptr %16, %37 : tensor<1x64x!tt.ptr<bf16>>, tensor<1x64xi32> loc(#loc18)
      %39 = tt.load %38 : tensor<1x64x!tt.ptr<bf16>> loc(#loc19)
      %40 = tt.broadcast %35 : tensor<64x1xbf16> -> tensor<64x64xbf16> loc(#loc20)
      %41 = tt.broadcast %39 : tensor<1x64xbf16> -> tensor<64x64xbf16> loc(#loc20)
      %42 = arith.mulf %40, %41 : tensor<64x64xbf16> loc(#loc20)
      %43 = arith.extf %42 : tensor<64x64xbf16> to tensor<64x64xf32> loc(#loc21)
      %44 = arith.addf %arg10, %43 : tensor<64x64xf32> loc(#loc21)

      // triton_runner debug start
      %debug_pid_x            = tt.get_program_id x : i32 loc(#loc21)
      %debug_pid_y            = tt.get_program_id y : i32 loc(#loc21)
      %debug_pid_z            = tt.get_program_id z : i32 loc(#loc21)
      %debug_c0_i32           = arith.constant 0 : i32 loc(#loc21)
      %debug_cmpi_eq_x        = arith.cmpi eq, %debug_pid_x, %debug_c0_i32 : i32 loc(#loc21)
      %debug_cmpi_eq_y        = arith.cmpi eq, %debug_pid_y, %debug_c0_i32 : i32 loc(#loc21)
      %debug_cmpi_eq_z        = arith.cmpi eq, %debug_pid_z, %debug_c0_i32 : i32 loc(#loc21)
      %debug_cmpi_eq_x_y      = arith.andi %debug_cmpi_eq_x, %debug_cmpi_eq_y : i1 loc(#loc21)
      %debug_cmpi_eq_x_y_z    = arith.andi %debug_cmpi_eq_x_y, %debug_cmpi_eq_z : i1 loc(#loc21)
      scf.if %debug_cmpi_eq_x_y_z {
        %debug_range_0        = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc21)
        %debug_expand_0       = tt.expand_dims %debug_range_0 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc21)
        %debug_broadcast_0    = tt.broadcast %debug_expand_0 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc21)
        %debug_range_1        = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc21)
        %debug_expand_1       = tt.expand_dims %debug_range_1 {axis = 1 : i32} : tensor<64xi32> -> tensor<64x1xi32> loc(#loc21)
        %debug_size_0_i32     = arith.constant 64 : i32 loc(#loc21)
        %debug_size_0_splat   = tt.splat %debug_size_0_i32 : i32 -> tensor<64x1xi32> loc(#loc21)
        %debug_size_1_off     = arith.muli %debug_expand_1, %debug_size_0_splat : tensor<64x1xi32> loc(#loc21)
        %debug_broadcast_1    = tt.broadcast %debug_size_1_off : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc21)
        %debug_range          = arith.addi %debug_broadcast_0, %debug_broadcast_1 : tensor<64x64xi32> loc(#loc21)
        %debug_splat          = tt.splat %debug_tensor : !tt.ptr<f32> -> tensor<64x64x!tt.ptr<f32>> loc(#loc21)
        %debug_ptr            = tt.addptr %debug_splat, %debug_range : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc21)
        tt.store %debug_ptr, %44 : tensor<64x64x!tt.ptr<f32>> loc(#loc21)
      }
      // triton_runner debug end

      scf.yield %44 : tensor<64x64xf32> loc(#loc22)
    } loc(#loc14)
    %18 = tt.splat %arg8 : i32 -> tensor<64x1xi32> loc(#loc23)
    %19 = arith.muli %9, %18 : tensor<64x1xi32> loc(#loc23)
    %20 = tt.splat %arg2 : !tt.ptr<bf16> -> tensor<64x1x!tt.ptr<bf16>> loc(#loc24)
    %21 = tt.addptr %20, %19 : tensor<64x1x!tt.ptr<bf16>>, tensor<64x1xi32> loc(#loc24)
    %22 = tt.broadcast %21 : tensor<64x1x!tt.ptr<bf16>> -> tensor<64x64x!tt.ptr<bf16>> loc(#loc25)
    %23 = tt.broadcast %14 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc25)
    %24 = tt.addptr %22, %23 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi32> loc(#loc25)
    %25 = tt.splat %arg3 : i32 -> tensor<64x1xi32> loc(#loc26)
    %26 = arith.cmpi slt, %9, %25 : tensor<64x1xi32> loc(#loc26)
    %27 = tt.splat %arg5 : i32 -> tensor<1x64xi32> loc(#loc27)
    %28 = arith.cmpi slt, %14, %27 : tensor<1x64xi32> loc(#loc27)
    %29 = tt.broadcast %26 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc28)
    %30 = tt.broadcast %28 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc28)
    %31 = arith.andi %29, %30 : tensor<64x64xi1> loc(#loc28)
    %32 = arith.truncf %17 : tensor<64x64xf32> to tensor<64x64xbf16> loc(#loc29)
    tt.store %24, %32, %31 : tensor<64x64x!tt.ptr<bf16>> loc(#loc30)
    tt.return loc(#loc31)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":18:26)
#loc3 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":19:26)
#loc4 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":21:21)
#loc5 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":21:49)
#loc6 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":21:36)
#loc7 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":22:21)
#loc8 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":22:36)
#loc9 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":25:28)
#loc10 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":25:39)
#loc11 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":25:21)
#loc12 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":26:28)
#loc13 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":26:21)
#loc14 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":31:19)
#loc15 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":33:29)
#loc16 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":33:20)
#loc17 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":34:41)
#loc18 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":34:29)
#loc19 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":34:20)
#loc20 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":35:27)
#loc21 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":35:23)
#loc22 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":35:8)
#loc23 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":38:39)
#loc24 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":38:21)
#loc25 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":38:51)
#loc26 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":39:32)
#loc27 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":39:56)
#loc28 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":39:38)
#loc29 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":40:36)
#loc30 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":40:21)
#loc31 = loc("/home/ubuntu/triton_runner/debug_tool/ttir/03-matrix_multiplication/debug_acc.py":40:4)
